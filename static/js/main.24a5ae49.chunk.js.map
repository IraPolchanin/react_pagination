{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","lastPage","Math","ceil","pages","className","cn","disabled","href","onClick","map","page","active","handlePage","items","length","perPageOptions","App","useState","setPerPage","setCurrentPage","firstItem","lastItem","min","currentItems","slice","id","value","onChange","e","target","option","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAWC,KAAKC,KAAKN,EAAQC,GAC7BM,EAAQd,EAAW,EAAGW,GAW5B,OACE,qBAAII,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YAAa,CACzBC,SAA0B,IAAhBR,IAFd,SAKE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBT,EACfU,QAlBe,kBAAsB,IAAhBV,GACxBC,EAAaD,EAAc,IAY1B,oBAUDK,EAAMM,KAAI,SAAAC,GAAI,OACb,oBAAIN,UAAWC,IAAG,YAAa,CAC7BM,OAAQb,IAAgBY,IAD1B,SAIE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAnCA,SAACE,GAAD,OAAkBA,IAASZ,GACzCC,EAAaW,GAkCOE,CAAWF,IAJ5B,SAMGA,SAKP,oBACEN,UAAWC,IAAG,YAAa,CACzBC,SAAUR,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeT,IAAgBE,EAC/BQ,QA9Ce,kBAAMV,IAAgBE,GACxCD,EAAaD,EAAc,IAwC1B,wBC7DFe,EAAQxB,EAAW,EAAG,IACzBoB,KAAI,SAAAhB,GAAC,qBAAYA,MACdG,EAAQiB,EAAMC,OACdC,EAAiB,CAAC,EAAG,EAAG,GAAI,IAErBC,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOpB,EAAP,KAAgBqB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOnB,EAAP,KAAoBqB,EAApB,KACMC,EAAYtB,EAAcD,EAAUA,EACpCwB,EAAWpB,KAAKqB,IAAIxB,EAAcD,EAASD,GAC3C2B,EAAeV,EAAMW,MAAMJ,EAAWC,GAO5C,OACE,sBAAKjB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWN,EADX,mBACiCsB,EAAY,EAD7C,cACoDC,EADpD,eACmEzB,EADnE,OAIA,sBAAKQ,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRqB,GAAG,kBACHrB,UAAU,eACVsB,MAAO7B,EACP8B,SApBoB,SAACC,GAC7BV,GAAYU,EAAEC,OAAOH,OACrBP,EAAe,IAaT,SAOGJ,EAAeN,KAAI,SAAAqB,GAAM,OACxB,wBACEJ,MAAOI,EADT,SAIGA,GAFIA,UAQb,uBAAOC,QAAQ,kBAAkB3B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAAcoB,IAEhB,6BACGI,EAAad,KAAI,SAAAuB,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC/DjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.24a5ae49.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const lastPage = Math.ceil(total / perPage);\n  const pages = getNumbers(1, lastPage);\n\n  const handlePage = (page: number) => page !== currentPage\n    && onPageChange(page);\n\n  const handlePrevLink = () => currentPage !== 1\n    && onPageChange(currentPage - 1);\n\n  const handleNextLink = () => currentPage !== lastPage\n    && onPageChange(currentPage + 1);\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item', {\n          disabled: currentPage === 1,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handlePrevLink}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(page => (\n        <li className={cn('page-item', {\n          active: currentPage === page,\n        })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => handlePage(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={cn('page-item', {\n          disabled: currentPage === lastPage,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === lastPage}\n          onClick={handleNextLink}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\nconst total = items.length;\nconst perPageOptions = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const firstItem = currentPage * perPage - perPage;\n  const lastItem = Math.min(currentPage * perPage, total);\n  const currentItems = items.slice(firstItem, lastItem);\n\n  const handlePerPageSelector = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+e.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem + 1} - ${lastItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageSelector}\n          >\n            {perPageOptions.map(option => (\n              <option\n                value={option}\n                key={option}\n              >\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n      <ul>\n        {currentItems.map(item => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}